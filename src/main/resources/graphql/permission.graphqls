type Permission {
    id: ID!
    # 权限名
    name: String
    # 权限名称, 例如: user:read
    permission: String
    # 权限类别
    resourceType: String
    # 是否可用
    available: PermissionAvailable
    createdAt: String
    updatedAt: String
}

# 权限状态
enum PermissionAvailable {
    # 可用
    AVAILABLE
    # 禁用
    UNAVAILABLE
}

input createPermission {
    name: String!
    permission: String!
    resourceType: String!
}

extend type Query {
    # 通过ID查询权限
    searchPermissionWithId(id: Int): Permission

    # 通过权限名查询
    searchPermissionWithName(name: String): [Permission]

    # 通过角色ID查询
    searchPermissionWithRoleId(roleId: Int): [Permission]

    # 通过用户ID查询
    searchPermissionWithUserId(userId: Int): [Permission]
}

extend type Mutation {
    # 创建权限
    createPermission(permission: createPermission!): Permission!
}