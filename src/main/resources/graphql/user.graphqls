type User {
    id: ID!
    name: String
    phone: String
    cityId: Long
    city: City
    companyId: Long
    company: Company
    roles: [Role]
    status: Int
    createdAt: String
    updatedAt: String
}

input ConditionSearchUser {
    id: ID
    name: String
    phone: String
    cityId: Long
    companyId: Long
    status: Int
}

input CreateUser {
    name: String!
    phone: String!
    cityId: Long!
    companyId: Long!
    roleIds: [Long]
}

type Query {
    # 通过ID查询用户
    searchUserWithId(id: Int): User

    # 通过手机号查询用户
    searchUserWithPhone(phone: String!): User

    # 通过查询条件查询用户
    searchUsers(input: ConditionSearchUser): [User]
}

type Mutation {
    # 创建用户
    createUser(user: CreateUser!): User!
}