<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.world.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.hello.world.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="city_id" jdbcType="BIGINT" property="cityId"/>
        <result column="status" javaType="com.hello.world.enums.UserStatusEnum" property="status"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
    </resultMap>

    <resultMap id="userDtoMap" type="com.hello.world.dto.result.UserDto" extends="BaseResultMap"/>

    <resultMap id="cityDtoAssocitionMap" type="com.hello.world.dto.result.CityDto">
        <id column="city_city_id" property="id"/>
        <result column="city_name" property="name"/>
        <result column="city_created_at" property="createdAt"/>
        <result column="city_updated_at" property="updatedAt"/>
    </resultMap>

    <resultMap id="companyDtoAssocitionMap" type="com.hello.world.dto.result.CompanyDto">
        <id column="company_company_id" property="id"/>
        <result column="company_name" property="name"/>
        <result column="short_name" property="shortName"/>
        <result column="address" property="address"/>
        <result column="link_name" property="linkName"/>
        <result column="company_phone" property="phone"/>
        <result column="company_city_id" property="cityId"/>
        <result column="company_status" javaType="com.hello.world.enums.CompanyStatusEnum" property="status"/>
        <result column="company_created_at" property="createdAt"/>
        <result column="company_updated_at" property="updatedAt"/>
    </resultMap>

    <resultMap id="UserAndRolesAndPermissions" type="com.hello.world.dto.result.UserDto" extends="userDtoMap">
        <association property="cityDto" resultMap="cityDtoAssocitionMap"/>
        <association property="companyDto" resultMap="companyDtoAssocitionMap"/>
        <collection property="roles" ofType="com.hello.world.dto.result.RoleDto">
            <id column="role_id" property="id"/>
            <result column="role_name" property="name"/>
            <result column="role_status" javaType="com.hello.world.enums.RoleStatusEnum" property="status"/>
            <result column="role_remark" property="remark"/>
            <result column="role_created_at" property="createdAt"/>
            <result column="role_updated_at" property="updatedAt"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, phone, city_id, status, created_at, updated_at, company_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="userDtoMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.hello.world.dto.create.CreateUserDto">
        insert into user (id, name, phone, status, city_id, company_id, created_at, updated_at)
        values (#{id}, #{name}, #{phone}, #{status}, #{cityId}, #{companyId}, #{createdAt}, #{updatedAt})
    </insert>
    <!--<insert id="insert" parameterType="com.hello.world.entity.User">-->
        <!--insert into user (id, name, phone,-->
          <!--city_id, status, created_at,-->
          <!--updated_at, company_id)-->
        <!--values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},-->
          <!--#{cityId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP},-->
          <!--#{updatedAt,jdbcType=TIMESTAMP}, #{companyId,jdbcType=INTEGER})-->
    <!--</insert>-->
    <insert id="insertSelective" parameterType="com.hello.world.dto.create.CreateUserDto">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hello.world.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hello.world.dto.create.CreateUserDto">
        update user
        set name = #{name,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=VARCHAR},
          city_id = #{cityId,jdbcType=BIGINT},
          status = #{status,jdbcType=INTEGER},
          created_at = #{createdAt,jdbcType=TIMESTAMP},
          updated_at = #{updatedAt,jdbcType=TIMESTAMP},
          company_id = #{companyId,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findAll" resultMap="userDtoMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>
    <select id="selectByPhone" parameterType="java.lang.String" resultMap="userDtoMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where phone = #{phone}
    </select>
    <select id="searchCondition" resultMap="userDtoMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="status != null and status != ''">
                status = #{status}
            </if>
            <if test="status == null or status == ''">
                and status = 1
            </if>
            <if test="name != null and name != ''">
                and name like concat(#{name}, '%')
            </if>
            <if test="phone != null and phone != ''">
                and phone like concat(#{phone}, '%')
            </if>
            <if test="cityId != null and cityId != ''">
                and city_id = #{cityId}
            </if>
            <if test="companyId != null and companyId != ''">
                and company_id = #{company_id}
            </if>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
        </where>
    </select>
    <insert id="insertUser" parameterType="com.hello.world.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (name, phone, city_id, company_id)
        values (#{name}, #{phone}, #{cityId}, #{companyId})
    </insert>

    <select id="searchUserAndCityAndCompanyAndRolesWithId" resultMap="UserAndRolesAndPermissions">
        select user.id, user.name, user.phone, user.city_id, user.company_id, user.status, user.created_at, user.updated_at,
        city.id as city_city_id, city.name as city_name, city.created_at as city_created_at, city.updated_at as city_updated_at,
        company.id as company_company_id, company.name as company_name, company.short_name, company.address, company.link_name,
        company.phone as company_phone, company.city_id as company_city_id, company.status as company_status,
        company.created_at as company_created_at, company.updated_at as company_updated_at,
        role.id as role_id, role.name as role_name, role.status as role_status, role.remark as role_remark,
        role.created_at as role_created_at, role.updated_at as role_updated_at
        from user
        left join city
        on user.city_id = city.id
        left join company
        on user.company_id = company.id
        left join user_role
        on user.id = user_role.user_id
        left join role
        on user_role.role_id = role.id
        where user.status = 1
        <if test="id != null and id != ''">
            and user.id = #{id}
        </if>
    </select>

    <select id="searchUserAndCityAndCompanyAndRolesWithPhone" resultMap="UserAndRolesAndPermissions">
        select user.id, user.name, user.phone, user.city_id, user.company_id, user.status, user.created_at, user.updated_at,
        city.id as city_city_id, city.name as city_name, city.created_at as city_created_at, city.updated_at as city_updated_at,
        company.id as company_company_id, company.name as company_name, company.short_name, company.address, company.link_name,
        company.phone as company_phone, company.city_id as company_city_id, company.status as company_status,
        company.created_at as company_created_at, company.updated_at as company_updated_at,
        role.id as role_id, role.name as role_name, role.status as role_status, role.remark as role_remark,
        role.created_at as role_created_at, role.updated_at as role_updated_at
        from user
        left join city
        on user.city_id = city.id
        left join company
        on user.company_id = company.id
        left join user_role
        on user.id = user_role.user_id
        left join role
        on user_role.role_id = role.id
        where user.status = 1
         <if test="phone != null and phone != ''">
            and user.phone like concat(#{phone}, '%')
         </if>
    </select>

    <!--<select id="selectByPhone" parameterType="java.lang.String" resultMap="userDtoMap">-->
        <!--select-->
        <!--<include refid="Base_Column_List"/>-->
        <!--from user-->
        <!--where phone = #{phone}-->
    <!--</select>-->

    <select id="searchUserAndCityAndCompanyAndRoles" resultMap="UserAndRolesAndPermissions">
      select user.id, user.name, user.phone, user.city_id, user.company_id, user.status, user.created_at, user.updated_at,
        city.id as city_city_id, city.name as city_name, city.created_at as city_created_at, city.updated_at as city_updated_at,
        company.id as company_company_id, company.name as company_name, company.short_name, company.address, company.link_name,
        company.phone as company_phone, company.city_id as company_city_id, company.status as company_status,
        company.created_at as company_created_at, company.updated_at as company_updated_at,
        role.id as role_id, role.name as role_name, role.status as role_status, role.remark as role_remark,
        role.created_at as role_created_at, role.updated_at as role_updated_at
      from user
      left join city
        on user.city_id = city.id
      left join company
        on user.company_id = company.id
      left join user_role
        on user.id = user_role.user_id
      left join role
        on user_role.role_id = role.id
      <where>
          <if test="status != null and status != ''">
              user.status = #{status}
          </if>
          <if test="status == null or status == ''">
              and user.status = 1
          </if>
          <if test="name != null and name != ''">
              and user.name like concat(#{name}, '%')
          </if>
          <if test="phone != null and phone != ''">
              and user.phone like concat(#{phone}, '%')
          </if>
          <if test="cityId != null and cityId != ''">
              and user.city_id = #{cityId}
          </if>
          <if test="companyId != null and companyId != ''">
              and user.company_id = #{company_id}
          </if>
          <if test="id != null and id != ''">
              and user.id = #{id}
          </if>
      </where>
    </select>
</mapper>