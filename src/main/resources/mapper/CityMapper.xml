<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.dao.CityMapper">
    <resultMap id="BaseResultMap" type="hello.entity.City">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, created_at, updated_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from city
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
      delete from city
      where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="hello.entity.City">
        insert into city (id, name, created_at,
          updated_at)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP},
          #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="hello.entity.City">
        insert into city
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="hello.entity.City">
        update city
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="hello.entity.City">
        update city
        set name = #{name,jdbcType=VARCHAR},
          created_at = #{createdAt,jdbcType=TIMESTAMP},
          updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
     </update>

    <insert id="insertCity" useGeneratedKeys="true" keyProperty="id">
        insert into city (name)
        values (#{name})
    </insert>
    <select id="searchWithName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from city
        where name like concat(#{name}, '%')
    </select>
    <select id="searchCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from city
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
            <if test="name != null and id !=''">
                and name like concat(#{name}, '%')
            </if>
        </where>
    </select>
</mapper>